akka {
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  loggers = ["akka.testkit.TestEventListener"]
  actor {
    default-dispatcher {
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 2.0
        parallelism-max = 8
      }
    }
    serialize-creators = off
    serialize-messages = off
    serializers {
//      serializer = "v2g.smartdriver.persistence.SmartDriverPersistersSerializer",
      serializer = "v2g.aggregator.nuvve.persistance.NuvvePersistersSerializer"
    }
    serialization-bindings {
      "stamina.Persistable" = serializer
      // enable below to check if all events have been serialized without java.io.Serializable
      "java.io.Serializable" = none
    }
  }
  persistence {
    publish-confirmations = on
    publish-plugin-commands = on
    journal {
      plugin = "inmemory-journal"
      inmemory-journal {
        event-adapters {
          tagging = "v2g.smartdriver.persistence.SmartDriverTaggingEventAdapter"
        }
        event-adapter-bindings {
          "v2g.smartdriver.domain.SmartDriverDomainProtocol$SmartDriverDomainEvent" = tagging
        }
      }
    }
  }
  bounded.test {
    single-expect-default = 10s
    timefactor = 1
  }

}