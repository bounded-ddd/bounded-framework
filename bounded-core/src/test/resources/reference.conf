akka {
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  loggers = ["akka.testkit.TestEventListener"]
//  actor {
//    default-dispatcher {
//      executor = "fork-join-executor"
//      fork-join-executor {
//        parallelism-min = 8
//        parallelism-factor = 2.0
//        parallelism-max = 8
//      }
//    }
//    serialize-creators = off
//    serialize-messages = off
//    serializers {
//      serializer = "com.eduarte.participantplanner.persistence.ParticipantPlannerPersistersSerializer"
//    }
//    serialization-bindings {
//      "stamina.Persistable" = serializer
//      // enable below to check if all events have been serialized without java.io.Serializable
//      "java.io.Serializable" = none
//    }
//  }
  persistence {
    publish-confirmations = on
    publish-plugin-commands = on
    journal {
      plugin = "inmemory-journal"
    }
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
//  test {
//    single-expect-default = 10s
//    timefactor = 1
//  }
}
//inmemory-journal {
//  event-adapters {
//    participantPlannerTagging = "com.eduarte.participantplanner.persistence.ParticipantPlannerTaggingEventAdapter"
//  }
//  event-adapter-bindings {
//    "com.eduarte.participantplanner.domain.Leave$LeaveEvent" = participantPlannerTagging
//    "com.eduarte.participantplanner.domain.ParticipantPlannerDomainProtocol$CalendarDomainEvent" = participantPlannerTagging
//  }
//}
//inmemory-read-journal {
//  refresh-interval = "10ms"
//  max-buffer-size = "1000"
//}
//bounded.eventmaterializers.publish = true
//bounded.eventmaterializers.offsetstore {
//  type = "inmemory"
//}

querydb = {
  connectionPool = "HikariCP"
  profile = "slick.jdbc.H2Profile$"
  db.dataSourceClass = "org.h2.jdbcx.JdbcDataSource"
  db.properties = {
    url = "jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"
    user = "sa"
    password = ""
  }
  numThreads = 2
}
application {
  jwt.secret = "secret"
}